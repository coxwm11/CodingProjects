package secretWriting;

import java.util.Scanner;
import java.lang.Throwable;
import java.io.*;

public class SecretWriting {

	// Method for Encoding User's message
	public static String encryptMessage(String userInput, String originalAlphabet, String keyEncoded) {
		String spaceOutput = "";

		for (int i = 0; i < userInput.length(); i++) {

			char keyCharacter;
			char messageCharacter = userInput.charAt(i);
			int inputIndex = originalAlphabet.indexOf(messageCharacter);
			try {

				keyCharacter = keyEncoded.charAt(inputIndex);

			} catch (StringIndexOutOfBoundsException e) {

				keyCharacter = messageCharacter;

			}

			spaceOutput += keyCharacter;

		}

		return spaceOutput;

	}

	// Method for Decoding User's Message

	public static String decryptMessage(String userInput, String originalAlphabet, String keyEncoded) {

		String spaceOutput = "";

		for (int i = 0; i < userInput.length(); i++) {

			char keyCharacter;
			char messageCharacter = userInput.charAt(i);
			int inputIndex = keyEncoded.indexOf(messageCharacter);
			try {

				keyCharacter = originalAlphabet.charAt(inputIndex);

			} catch (StringIndexOutOfBoundsException e) {

				keyCharacter = messageCharacter;

			}

			spaceOutput += keyCharacter;

		}

		return spaceOutput;
	}

	public static void main(String[] args) throws IOException, NullPointerException {

		// User input
		Scanner scan = new Scanner(System.in);
		String input;
		String fileOutName;

		// Introduction
		System.out.print("Welcome to the Encoder/ Decoder Program \n");
		System.out.print("-----------------------------------------\n");
		System.out.print("Enter E to encode a message. \n");
		System.out.print("Enter D to decode a message. \n");
		System.out.print("Enter Q to quit the program. \n");
		System.out.print("Enter your choice: ");
		input = scan.nextLine();

		char characterQ = input.charAt(0);

		// Begins Program Loop if user does not select Quit
		while (characterQ != 'q') {

			// Begins Encoding Process
			if (input.charAt(0) == 'E' || input.charAt(0) == 'e') {

				// Create input and output file streams
				BufferedReader in = null;
				PrintWriter outputStream = null;
				String encryptMethod;

				try {
					System.out.println("");
					System.out.println("");

					// User inputs the file name they are searching for
					System.out.print("Enter the name of the file that contains the code:");
					input = scan.nextLine();

					// This code reads the file that was selected by the user
					in = new BufferedReader(new FileReader(input));
					String keyEncoded = in.readLine();

					// Original alphabet string
					String alphabetIndex = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

					// User puts the name of the desired output file
					System.out.print("Enter the name of the output file:");
					fileOutName = scan.nextLine();
					outputStream = new PrintWriter(new FileWriter(fileOutName));

					// User enters message they want to Encode
					System.out.print("Enter the message you want to encode. ");
					input = scan.nextLine();

					// This method encrypts the user's message
					encryptMethod = encryptMessage(input, alphabetIndex, keyEncoded);

					// Returns Encrypted Message to Console
					System.out.println("Enclosed Message: " + encryptMethod);
					System.out.println("");
					System.out.println("");

					// Prints encrypted message to user created file
					outputStream.println("Your original Message: " + input);
					outputStream.println("");
					outputStream.println("Encrypted Message: " + encryptMethod);
					outputStream.close();

					// Restarts program
					System.out.print("Enter E to encode a message. \n");
					System.out.print("Enter D to decode a message. \n");
					System.out.print("Enter Q to quit the program. \n");
					System.out.print("Enter your choice:");

					input = scan.nextLine();
					characterQ = input.charAt(0);

				}

				catch (IOException nofile) {
					System.out.println("");
					System.out.println("ATTN: File was not found or could not be opened.");

				} catch (NullPointerException notext) {
					System.out.println("");
					System.out.println("ATTN: There is no text in the file.");

				}

			} // Ends Encoding Process

			// Begins Decoding Process
			if (input.charAt(0) == 'D' || input.charAt(0) == 'd') {

				// Create input and output file streams
				BufferedReader in = null;
				PrintWriter outputStream = null;
				String decryptMethod;

				try {
					System.out.println("");
					System.out.println("");

					// User inputs the file name they are searching for
					System.out.print("Enter the name of the file that contains the code:");
					input = scan.nextLine();

					// This code reads the file that was selected by the user
					in = new BufferedReader(new FileReader(input));
					String keyEncoded = in.readLine();

					// Original alphabet string
					String alphabetIndex = "abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ";

					// User puts the name of the desired output file
					System.out.print("Enter the name of the output file:");
					fileOutName = scan.nextLine();
					outputStream = new PrintWriter(new FileWriter(fileOutName));

					// User enters message they want to Decode
					System.out.print("Enter the message you want to decode. ");
					input = scan.nextLine();

					// This method encrypts the user's message
					decryptMethod = decryptMessage(input, alphabetIndex, keyEncoded);

					// Returns Encrypted Message to Console
					System.out.println("Enclosed Message: " + decryptMethod);
					System.out.println("");
					System.out.println("");

					// Prints decrypted message to user created file
					outputStream.println("Your original Message: " + input);
					outputStream.println("");
					outputStream.println("Decrypted Message: " + decryptMethod);
					outputStream.close();

					// Restarts program
					System.out.print("Enter E to encode a message. \n");
					System.out.print("Enter D to decode a message. \n");
					System.out.print("Enter Q to quit the program. \n");
					System.out.print("Enter your choice:");

					input = scan.nextLine();
					characterQ = input.charAt(0);

				}

				catch (IOException noFile) {
					System.out.println("");
					System.out.println("ATTN: File was not found or could not be opened.");
				} catch (NullPointerException notext) {
					System.out.println("");
					System.out.println("ATTN: There is no text in the file.");

				}

			} // Ends decoding Process
			
			//Exits Program if User selects Quit

			if (characterQ == 'q' || characterQ == 'Q') {
				System.out.print("");
			}
			
			//Corrects incorrect entry and allows user to try again

			else if (characterQ != 'E' || characterQ != 'e' || characterQ != 'D' || characterQ != 'd') {
				System.out.println("");
				System.out.println("Please, try again!");
				System.out.println("");
				// Restarts program
				System.out.print("Enter E to encode a message. \n");
				System.out.print("Enter D to decode a message. \n");
				System.out.print("Enter Q to quit the program. \n");
				System.out.print("Enter your choice:");
				input = scan.nextLine();
				characterQ = input.charAt(0);

			}

		}

		//Closes scanner and Exits program
		System.out.println("");
		System.out.print("Thank you and Good-Bye!");
		scan.close();

	}

}
